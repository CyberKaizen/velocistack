version: '3'
services:
  velociraptor:
    container_name: velociraptor
    #image: wlambert/velociraptor
    build:
      context: ./velociraptor
      dockerfile: Dockerfile
    volumes:
      - ./velociraptor_data:/velociraptor/:rw
      - ./velociraptor/custom:/custom:ro
    environment:
      - VELO_USER=${VELO_USER}
      - VELO_PASSWORD=${VELO_PASSWORD}
      - VELO_ROLE=${VELO_ROLE}
      - VELO_SERVER_URL=${VELO_SERVER_URL}
      - VELO_FRONTEND_HOSTNAME=${VELO_FRONTEND_HOSTNAME}
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8889:8889"
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.external-url=http://0.0.0.0/prometheus
      - --web.route-prefix=/
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    ports:
      - 9091:9091
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    expose:
      - 9100
    depends_on:
      - velociraptor
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SERVER_ROOT_URL=http://0.0.0.0/grafana
      - GF_AUTH_ANONYMOUS_ENABLED=true  
      #- GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
      - cadvisor
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.15.2
    environment:
      - xpack.security.enabled=false
      - xpack.spaces.enabled=false
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=https://${KIBANA_SERVER_NAME}/kibana
      - SERVER_BASEPATH=/kibana
      - SERVER_DEFAULTROUTE=/app/discover
      - SERVER_DEFAULTINDEX=artifact*
      - SERVER_SHOWINSECURECLUSTERWARNING=false
      - TELEMETRY_ENABLED=false
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  setup_kibana:
    image: centos:7
    container_name: setup_kibana
    volumes:
      - ./kibana/scripts/setup-kibana.sh:/setup-kibana.sh:ro
        #command: /bin/bash
    command: ['/bin/bash', '-c', 'cat /setup-kibana.sh | tr -d "\r" | bash']
    depends_on:
      - kibana

volumes:
  elasticsearch-data:
    driver: local

#zinc:
  #  container_name: zinc
  #  build:
  #    context: ./zinc
  #    dockerfile: Dockerfile
  #  volumes:
  #    - ./zinc/data:/data:rw
  #  environment:
  #    - DATA_PATH=/data 
  #    - FIRST_ADMIN_USER=${FIRST_ADMIN_USER}
  #    - FIRST_ADMIN_PASSWORD=${FIRST_ADMIN_PASSWORD}
  #  ports:
  #    - "4080:4080"
  #  restart: unless-stopped
